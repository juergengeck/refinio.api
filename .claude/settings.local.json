{
  "permissions": {
    "allow": [
      "Bash(git fetch:*)",
      "Bash(git reset:*)",
      "Bash(npm run build:*)",
      "Read(//c/Users/juerg/source/one.filer.windows/one.projfs/**)",
      "Bash(node:*)",
      "Read(//c/Users/juerg/source/one.filer.windows/electron-app/node_modules/@refinio/one.ifsprojfs/**)",
      "Read(//c/Users/juerg/source/one.filer.windows/one.ifsprojfs/**)",
      "Bash(npm install)",
      "Read(//c/Users/juerg/source/one.filer.windows/electron-app/**)",
      "Read(//c/Users/juerg/source/one.filer.windows/packages/one.leute.replicant/src/filer/**)",
      "Read(//c/Users/juerg/source/one.filer.windows/packages/one.leute.replicant/src/**)",
      "Read(//c/Users/juerg/source/one.filer.windows/vendor/**)",
      "Read(//c/Users/juerg/source/one.filer.windows/**)",
      "Read(//c/Users/juerg/source/**)",
      "Bash(tar:*)",
      "Read(//c/tmp/**)",
      "Bash(gh repo list:*)",
      "Bash(fi)",
      "Bash(done)",
      "Bash(git log:*)",
      "Bash(echo:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nAdd complete Filer integration with ProjFS support\n\nMajor refactoring to mount full Filer filesystem structure:\n- Created complete Filer with all 7 filesystems (chats, debug, invites, objects, types, profiles, questionnaires)\n- Initialize all required models (LeuteModel, TopicModel, Notifications, IoMManager, QuestionnaireModel)\n- Mount complete filesystem structure matching Replicant implementation\n- Fix package naming: @refinio/one.ifsprojfs â†’ @refinio/one.projfs for consistency\n- Integration tests pass: ProjFS mount works, invites readable at /invites/iop_invite.txt\n- Bidirectional contact creation verified\nEOF\n)\")"
    ],
    "deny": [],
    "ask": []
  }
}
